/******************************************************************
*  File:         [asgkit2Frame.java]
*  Created:      [28/08/2016FECHA DE CREACIÓN]
*  Last Changed: $Date: 03/08/2016 15:15:25 $
*  Author:       <A HREF="mailto:[Correo Electronico]">SOCRATES BENITEZ DOMINGUEZ</A>
*
*  This code is copyright (c) 2016 
*  CENTRO DE INVESTIGACIÓN Y DESARROLLO TECNOLÓGICO
*  TECNM
* 
*  Historial:
*  $Log: Coding Standard.docx,v $
*  Revision 1.1.1.1  01/09/2016 15:15:25  
*  Revisor: Moisés Gónzalez García
*  
*******************************************************************/

package com;

import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

 /*********************************************************************
* File:  asgkit2Frame.java
* Java Class: Juan 
* Package: com 
* Description: Java Frame utilized to scan directories display menu 
* and read java files 
* Author:  Sócrates Benítez Domínguez 
* Creation Date:   28/08/2016
************************************************************************/

public class asgkit2Frame extends javax.swing.JFrame {

    /**
     * Creates new form asgkit2Frame
     */
    public asgkit2Frame() {
        initComponents();
//        DirectoryPath.setText("/Users/Socra3Mx/Documents/NetBeansProjects/CB56ServsEsc/ASGKIT1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Find = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        Scan = new javax.swing.JButton();
        DirectoryPath = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Find.setText("Buscar...");
        Find.setActionCommand("Select");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccióne el directorio");

        AreaTexto.setColumns(20);
        AreaTexto.setRows(5);
        jScrollPane1.setViewportView(AreaTexto);

        Scan.setText("Escanear");
        Scan.setActionCommand("Select");
        Scan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScanActionPerformed(evt);
            }
        });

        DirectoryPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectoryPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Find, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Scan, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DirectoryPath))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DirectoryPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Find)
                    .addComponent(Scan))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
       /* Code for variable comments 
        * This variables is declared to implement java interfaces to read directories and files
        * 
        */
        Directory directory = new Directory();
//        DirectoryPath.setText("/Users/Socra3Mx/Documents/NetBeansProjects/CB56ServsEsc/ASGKIT1");
        DirectoryPath.setText(directory.FindDirectory());    
        
    }//GEN-LAST:event_FindActionPerformed

    private void DirectoryPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectoryPathActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_DirectoryPathActionPerformed

    private void ScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScanActionPerformed
        /* -----------------------------------------------------------
        *         --  == Code for variable comments == --
        *  This variables is declared to implement java interfaces to 
        *  files with extension ".java"
        *  and display the results in a JTextArea java swing component 
        *  called as AreaTexto 
        *  Implement the class classFoo declared to save the data of 
        *  class of the files Java readed
        *  Implement the class metodFoo declared to save the data of 
        *  java method of the class in Java file readed
        *  Implement the class metodFoo declared to get the data of 
        *  java method of the class in Java file readed
        *  Implement the class processFile declared to start the 
        *  process the data of read java files 
        *  java method of the class in Java file readed
        */ 
        
        int totalMethodLines =0;
        int totalClassLines  = 0;
        int totalClasPhysicalLines = 0;
        int totalProgramLines  = 0;
        clasFoo classFoo = new clasFoo();                                       //   Class to get the class of the java file 

        processFile processedFile= new processFile ();
        List<clasFoo> clasList=processedFile.getClasList(); 
        List<metodFoo> metodList;                                               //  Class to get the mthods of the class
        processedFile.readFilesFromDirectory(DirectoryPath.getText());          //  Begin the process of read the java files line by line
        
        
        for(int j=0; j<clasList.size(); j++)
        {
             AreaTexto.append("Clase: "+clasList.get(j).getClasName()+" "+clasList.get(j).getClasLines()+"\n");
             AreaTexto.append("Lineas Comentadas: "+clasList.get(j).getClasName()+" "+clasList.get(j).getClasCommentLines()+"\n");
             
             classFoo = clasList.get(j);
             metodList = classFoo.getMethodList();
             AreaTexto.append(   "     Puntos de Funcion: "+metodList.size()+"\n");
             totalMethodLines = 0;
             for(int k=0; k<metodList.size(); k++)
             {                 
                AreaTexto.append("          Metodo: "+ metodList.get(k).getMethodName() + " Lineas:    "+metodList.get(k).getNumberLines()+"\n");
                totalMethodLines = totalMethodLines+ metodList.get(k).getNumberLines();
             }
             
                totalClassLines  = totalClassLines + clasList.get(j).getClasLines();
                totalClasPhysicalLines = totalClasPhysicalLines + clasList.get(j).getClasTotalPhysicalLines();
               AreaTexto.append(   "      Lineas de Puntos de Funcion:    "+totalMethodLines +"\n");
               AreaTexto.append(   "      Lineas Logicas de Clase:    "+totalClassLines+"\n"); 
               AreaTexto.append(   "      Lineas Fisicas de Clase:    "+ (clasList.get(j).getClasTotalPhysicalLines()) +"\n"); 
               totalProgramLines = totalProgramLines  + totalClassLines ;
               totalClassLines = 0;
        }
               AreaTexto.append(   " -------  Lineas Logicas Totales:    "+totalProgramLines  +"\n");  
               AreaTexto.append(   " -------  Lineas Fisicas Totales:    "+totalClasPhysicalLines +"\n");  
               
    }//GEN-LAST:event_ScanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(asgkit2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(asgkit2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(asgkit2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(asgkit2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new asgkit2Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaTexto;
    private javax.swing.JTextField DirectoryPath;
    private javax.swing.JButton Find;
    private javax.swing.JButton Scan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
